// Generated by CoffeeScript 1.3.1
(function() {
  var Particle;

  Particle = (function() {

    Particle.name = 'Particle';

    Particle.FRICTION = 0.9;

    function Particle(elem) {
      this.elem = elem;
      this.transform = {
        x: 0,
        y: 0,
        rotation: 0
      };
      this.offset = {
        top: window.getOffset(this.elem).top,
        left: window.getOffset(this.elem).left
      };
      this.velocity = {
        x: 0,
        y: 0
      };
    }

    Particle.prototype.tick = function(blast) {
      var distX, distY, distanceWithBlast, force, forceX, forceY, previousRotation, previousStateX, previousStateY, rad;
      previousStateX = this.transform.x;
      previousStateY = this.transform.y;
      previousRotation = this.transform.rotation;
      if (this.velocity.x > Particle.FRICTION) {
        this.velocity.x -= Particle.FRICTION;
      } else if (this.velocity.x < -Particle.FRICTION) {
        this.velocity.x += Particle.FRICTION;
      } else {
        this.velocity.x = 0;
      }
      if (this.velocity.y > Particle.FRICTION) {
        this.velocity.y -= Particle.FRICTION;
      } else if (this.velocity.y < -Particle.FRICTION) {
        this.velocity.y += Particle.FRICTION;
      } else {
        this.velocity.y = 0;
      }
      if (blast != null) {
        distX = this.x() - blast.x;
        distY = this.y() - blast.y;
        distanceWithBlast = Math.sqrt(distX * distX + distY * distY);
        force = 1500 / distanceWithBlast;
        rad = Math.asin(distY / distanceWithBlast);
        forceY = Math.sin(rad) * force;
        forceX = Math.cos(rad) * force * (distX < 0 ? -1 : 1);
        this.velocity.x = +forceX;
        this.velocity.y = +forceY;
      }
      this.transform.x = this.transform.x + this.velocity.x;
      this.transform.y = this.transform.y + this.velocity.y;
      this.transform.rotation = this.transform.x * -10;
      if ((previousStateX !== this.transform.x || previousStateY !== this.transform.y || previousRotation !== this.transform.rotation) && ((this.transform.x > 1 || this.transform.x < -1) || (this.transform.y > 1 || this.transform.y < -1))) {
        return this.setTransform();
      }
    };

    Particle.prototype.setTransform = function() {
      var transform;
      transform = "translate(" + this.transform.x + "px, " + this.transform.y + "px) rotate(" + this.transform.rotation + "deg)";
      this.elem.style['MozTransform'] = transform;
      this.elem.style['WebkitTransform'] = transform;
      this.elem.style['MsTransform'] = transform;
      this.elem.style['transform'] = transform;
      return this.elem.style['zIndex'] = 9999;
    };

    Particle.prototype.y = function() {
      return this.offset.top + this.transform.y;
    };

    Particle.prototype.x = function() {
      return this.offset.left + this.transform.x;
    };

    return Particle;

  })();

  this.Particle = Particle;

}).call(this);
